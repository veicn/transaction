<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinochem.crude.trade.blockchain.dao.TShipagentAppointMapper">
  <resultMap id="BaseResultMap" type="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="deal_no" jdbcType="VARCHAR" property="dealNo" />
    <result column="deal_uuid" jdbcType="VARCHAR" property="dealUuid" />
    <result column="enterprise_id" jdbcType="BIGINT" property="enterpriseId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="appoint_enterprise_id" jdbcType="BIGINT" property="appointEnterpriseId" />
    <result column="appoint_enterprise_name" jdbcType="VARCHAR" property="appointEnterpriseName" />
    <result column="alive_flag" jdbcType="VARCHAR" property="aliveFlag" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Base_Column_List">
    id, deal_no, deal_uuid, enterprise_id, enterprise_name, status, appoint_enterprise_id,
    appoint_enterprise_name, alive_flag, create_date, update_date, create_user, update_user
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `product-trade-blockchain`.t_shipagent_appoint
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `product-trade-blockchain`.t_shipagent_appoint
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint" useGeneratedKeys="true" keyProperty="id">
    insert into `product-trade-blockchain`.t_shipagent_appoint (id, deal_no, deal_uuid,
      enterprise_id, enterprise_name, status, 
      appoint_enterprise_id, appoint_enterprise_name, 
      alive_flag, create_date, update_date,
      create_user, update_user)
    values (#{id,jdbcType=BIGINT}, #{dealNo,jdbcType=VARCHAR}, #{dealUuid,jdbcType=VARCHAR}, 
      #{enterpriseId,jdbcType=BIGINT}, #{enterpriseName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{appointEnterpriseId,jdbcType=BIGINT}, #{appointEnterpriseName,jdbcType=VARCHAR}, 
      #{aliveFlag,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint">
    insert into `product-trade-blockchain`.t_shipagent_appoint
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dealNo != null">
        deal_no,
      </if>
      <if test="dealUuid != null">
        deal_uuid,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="appointEnterpriseId != null">
        appoint_enterprise_id,
      </if>
      <if test="appointEnterpriseName != null">
        appoint_enterprise_name,
      </if>
      <if test="aliveFlag != null">
        alive_flag,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dealNo != null">
        #{dealNo,jdbcType=VARCHAR},
      </if>
      <if test="dealUuid != null">
        #{dealUuid,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="appointEnterpriseId != null">
        #{appointEnterpriseId,jdbcType=BIGINT},
      </if>
      <if test="appointEnterpriseName != null">
        #{appointEnterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="aliveFlag != null">
        #{aliveFlag,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint">
    update `product-trade-blockchain`.t_shipagent_appoint
    <set>
      <if test="dealNo != null">
        deal_no = #{dealNo,jdbcType=VARCHAR},
      </if>
      <if test="dealUuid != null">
        deal_uuid = #{dealUuid,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="appointEnterpriseId != null">
        appoint_enterprise_id = #{appointEnterpriseId,jdbcType=BIGINT},
      </if>
      <if test="appointEnterpriseName != null">
        appoint_enterprise_name = #{appointEnterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="aliveFlag != null">
        alive_flag = #{aliveFlag,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint">
    update `product-trade-blockchain`.t_shipagent_appoint
    set deal_no = #{dealNo,jdbcType=VARCHAR},
      deal_uuid = #{dealUuid,jdbcType=VARCHAR},
      enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      appoint_enterprise_id = #{appointEnterpriseId,jdbcType=BIGINT},
      appoint_enterprise_name = #{appointEnterpriseName,jdbcType=VARCHAR},
      alive_flag = #{aliveFlag,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="getTBrokerAppointPage" resultMap="BaseResultMap" parameterType="com.sinochem.crude.trade.blockchain.domain.TBrokerAppoint">
    select
      a.id,
      a.deal_no,
      a.deal_uuid,
      a.enterprise_id,
      a.enterprise_name,
      a.status,
      a.appoint_enterprise_id,
      a.appoint_enterprise_name,
      a.alive_flag,
      a.create_date,
      a.update_date,
      a.create_user,
      a.update_user
    from `product-trade-blockchain`.t_shipagent_appoint a
    inner join `product-trade-blockchain`.t_trans_extend e on a.deal_no = e.deal_no
    <where>
      enterprise_id=#{enterpriseId,jdbcType=BIGINT}
      <if test="dealNo != null and dealNo != ''">
        AND  a.deal_no LIKE CONCAT('%', #{dealNo}, '%')
      </if>
      <if test="purchaseContractNo != null and purchaseContractNo != ''">
        AND  e.purchase_contract_no LIKE CONCAT('%', #{purchaseContractNo}, '%')
      </if>
      <if test="status != null and status != ''">
        AND  a.status = #{status,jdbcType=VARCHAR}
      </if>
    </where>

  </select>



    <update id="updateByDealNo" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint">
        update `product-trade-blockchain`.t_shipagent_appoint
        <set>

            <if test="dealUuid != null">
                deal_uuid = #{dealUuid,jdbcType=VARCHAR},
            </if>
            <if test="enterpriseId != null">
                enterprise_id = #{enterpriseId,jdbcType=BIGINT},
            </if>
            <if test="enterpriseName != null">
                enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="appointEnterpriseId != null">
                appoint_enterprise_id = #{appointEnterpriseId,jdbcType=BIGINT},
            </if>
            <if test="appointEnterpriseName != null">
                appoint_enterprise_name = #{appointEnterpriseName,jdbcType=VARCHAR},
            </if>
            <if test="aliveFlag != null">
                alive_flag = #{aliveFlag,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=BIGINT},
            </if>
        </set>
        where deal_no = #{dealNo,jdbcType=VARCHAR}
    </update>

    <select id="selectByDealNo" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT * FROM `product-trade-blockchain`.t_shipagent_appoint
        WHERE deal_no like concat('%',#{dealNo, jdbcType=VARCHAR},'%')
        AND alive_flag = '1'
    </select>


    <select id="selectByCondition" parameterType="com.sinochem.crude.trade.blockchain.domain.TShipagentAppoint" resultMap="BaseResultMap" >
      select * from `product-trade-blockchain`.t_shipagent_appoint
      where alive_flag = '1'
      <if test="dealNo != null and dealNo!=''">
        and deal_no = #{dealNo,jdbcType=VARCHAR}
      </if>
      <if test="dealUuid !=null and dealUuid!=''">
        and deal_uuid = #{dealUuid,jdbcType=VARCHAR}
      </if>
      <if test="enterpriseId != null">
        and enterprise_id = #{enterpriseId,jdbcType=BIGINT}
      </if>
      <if test="enterpriseName != null">
        and enterprise_name = #{enterpriseName,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="appointEnterpriseId != null">
        and appoint_enterprise_id = #{appointEnterpriseId,jdbcType=BIGINT}
      </if>
      <if test="appointEnterpriseName != null">
        and appoint_enterprise_name = #{appointEnterpriseName,jdbcType=VARCHAR}
      </if>
      <if test="aliveFlag != null">
        and alive_flag = #{aliveFlag,jdbcType=VARCHAR}
      </if>
      <if test="createDate != null">
        and create_date = #{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="updateDate != null">
        and update_date = #{updateDate,jdbcType=TIMESTAMP}
      </if>
      <if test="createUser != null">
        and create_user = #{createUser,jdbcType=BIGINT}
      </if>
      <if test="updateUser != null">
        and update_user = #{updateUser,jdbcType=BIGINT}
      </if>
    </select>
</mapper>
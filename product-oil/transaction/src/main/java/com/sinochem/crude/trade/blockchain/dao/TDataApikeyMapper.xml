<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinochem.crude.trade.blockchain.dao.TDataApikeyMapper">
  <resultMap id="BaseResultMap" type="com.sinochem.crude.trade.blockchain.domain.TDataApikey">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="partner_role" jdbcType="VARCHAR" property="partnerRole" />
    <result column="api_key" jdbcType="VARCHAR" property="apiKey" />
    <result column="alive_flag" jdbcType="VARCHAR" property="aliveFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, partner_role, api_key, alive_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_data_apikey
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_data_apikey
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sinochem.crude.trade.blockchain.domain.TDataApikey">
    insert into t_data_apikey (id, partner_role, api_key, 
      alive_flag)
    values (#{id,jdbcType=INTEGER}, #{partnerRole,jdbcType=VARCHAR}, #{apiKey,jdbcType=VARCHAR}, 
      #{aliveFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sinochem.crude.trade.blockchain.domain.TDataApikey">
    insert into t_data_apikey
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="partnerRole != null">
        partner_role,
      </if>
      <if test="apiKey != null">
        api_key,
      </if>
      <if test="aliveFlag != null">
        alive_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partnerRole != null">
        #{partnerRole,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="aliveFlag != null">
        #{aliveFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.crude.trade.blockchain.domain.TDataApikey">
    update t_data_apikey
    <set>
      <if test="partnerRole != null">
        partner_role = #{partnerRole,jdbcType=VARCHAR},
      </if>
      <if test="apiKey != null">
        api_key = #{apiKey,jdbcType=VARCHAR},
      </if>
      <if test="aliveFlag != null">
        alive_flag = #{aliveFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinochem.crude.trade.blockchain.domain.TDataApikey">
    update t_data_apikey
    set partner_role = #{partnerRole,jdbcType=VARCHAR},
      api_key = #{apiKey,jdbcType=VARCHAR},
      alive_flag = #{aliveFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
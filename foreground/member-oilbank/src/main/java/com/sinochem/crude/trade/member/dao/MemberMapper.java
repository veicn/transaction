package com.sinochem.crude.trade.member.dao;

import com.sinochem.crude.trade.member.domain.Member;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface MemberMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    int insert(Member record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    int insertSelective(Member record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    Member selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    int updateByPrimaryKeySelective(Member record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table members
     *
     * @mbggenerated Thu Nov 02 14:14:25 CST 2017
     */
    int updateByPrimaryKey(Member record);
    /**
     * 查询子账号对应的会员
     * @param member
     * @return
     */
    List<Member> selectSubMembers(Member member);

    /**
     * 根据用户名获取member,用户名可能是手机或邮箱
     * @param userName
     * @param password
     * @return
     */
    Member selectByUserNameAndPassword(@Param("userName") String userName, @Param("password") String password);

    List<Member> selectByPrimary(Member member);

    /**
     * 删除一条数据中的邮箱/手机号
     * @param member
     */
    int removeEmailByPrimaryKey(Member member);
    int removeMobileByPrimaryKey(Member member);

    List<Member> selectCountByKey(Member member);

    List<Member> selectByAccountOrEmail(String keyword);

    void insertOm(Member member);

    List<Member> selectMembersByCredential(@Param("code") String code);

    List<Member> selectMembersByRole(@Param("role") String role);

    String selectUdbUUidByMemberId(@Param("id") Long id);
}
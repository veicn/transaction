<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinochem.crude.trade.member.dao.MessageLogMemberMapper">
    <resultMap id="BaseResultMap" type="com.sinochem.crude.trade.member.domain.MessageLogMember">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="message_log_id" property="messageLogId" jdbcType="BIGINT"/>
        <result column="member_id" property="memberId" jdbcType="BIGINT"/>
        <result column="response" property="response" jdbcType="VARCHAR"/>
        <result column="success" property="success" jdbcType="CHAR"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, message_log_id, member_id,response,success,create_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from message_log_member
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from message_log_member
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.sinochem.crude.trade.member.domain.MessageLogMember">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into message_log_member (message_log_id, member_id,response,success,create_time)
        values (#{messageLogId,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{response,jdbcType=VARCHAR}, #{success,jdbcType=CHAR},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.sinochem.crude.trade.member.domain.MessageLogMember">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into message_log_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="messageLogId != null">
                message_log_id,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="response != null">
                response,
            </if>
            <if test="success != null">
                success,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="messageLogId != null">
                #{messageLogId,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=BIGINT},
            </if>
            <if test="response != null">
                #{response,jdbcType=VARCHAR},
            </if>
            <if test="success != null">
                #{success,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.crude.trade.member.domain.MessageLogMember">
        update message_log_member
        <set>
            <if test="messageLogId != null">
                message_log_id = #{messageLogId,jdbcType=BIGINT},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=BIGINT},
            </if>
            <if test="response != null">
                response = #{response,jdbcType=VARCHAR},
            </if>
            <if test="success != null">
                success = #{success,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sinochem.crude.trade.member.domain.MessageLogMember">
    update message_log_member
    set message_log_id = #{messageLogId,jdbcType=BIGINT},
      member_id = #{memberId,jdbcType=BIGINT},
      response = #{response,jdbcType=VARCHAR},
      success = #{success,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <resultMap id="ExtraResultMap" type="com.sinochem.crude.trade.member.domain.MessageLogMember"
               extends="BaseResultMap">
        <result column="member_name" property="memberName" jdbcType="VARCHAR"></result>
    </resultMap>
    <select id="getLogMemberListByMessageId" resultMap="ExtraResultMap">
    SELECT
        mlm.*, m.user_name AS member_name
    FROM
        message_log_member mlm
    INNER JOIN members m ON m.id = mlm.member_id
    WHERE mlm.message_log_id = #{messageLogId,jdbcType=BIGINT}
  </select>

    <insert id="batchInsert">
        insert into message_log_member (message_log_id, member_id,response,success,create_time)
        values
          <foreach collection="list" item="item" separator=",">
              (#{item.messageLogId,jdbcType=BIGINT}, #{item.memberId,jdbcType=BIGINT}, #{item.response,jdbcType=VARCHAR}, #{item.success,jdbcType=CHAR}, #{item.createTime,jdbcType=TIMESTAMP})
          </foreach>
    </insert>
</mapper>